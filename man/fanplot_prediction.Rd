% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fanplot_prediction.R
\name{fanplot_prediction}
\alias{fanplot_prediction}
\title{Display prediction as a fan plot}
\usage{
fanplot_prediction(pred, unit = 1, probs = 1:99/100,
  interpolate_probs = TRUE, add_observed = TRUE,
  add_pred_means = TRUE, fan.col = colorRampPalette(c("darkgreen",
  "gray90")), pt.col = "red", pt.cex = 0.6, l.col = "black",
  mean_col = "black", mean_lty = "dashed", ln = NULL, rlab = NULL,
  add = FALSE, add_legend = FALSE, width_legend = 0.1 *
  (max(pred$timepoints) - min(pred$timepoints))/pred$freq,
  probs_legend = c(1, 25, 50, 75, 99)/100, ylim = NULL, xlab = "t",
  ylab = "No. infected", return_matrix = FALSE, ...)
}
\arguments{
\item{pred}{the prediction as returned by \code{longterm_prediction_hhh4}
(and potentially aggregated using aggregate_prediction)}

\item{unit}{numeric denoting the unit to display}

\item{probs}{vector of probabilities: which quantiles shall be displayed in the fan plot?}

\item{interpolate_probs}{logical: smooth curves by simple interpolation of quantiles}

\item{add_observed}{logical: shall observed values be added?}

\item{fan.col, ln, rlab}{graphical parameters passed on to \code{fanplot::fan}}

\item{pt.col, pt.cex, l.col}{graphical parameters for display of observed values}

\item{add}{logical: add to existing plot?}

\item{add_legend}{logical: shall a color key legend be added?}

\item{width_legend}{width of box for color key legend in user coordinates}

\item{probs_legend}{vecor of probabilities to display in the legend}

\item{ylim}{limit for the y-axis, passed to \code{plot()}}

\item{xlab, ylab}{axis labels}

\item{return_matrix}{logical: return matrix passed to \code{fanplot::fan}; useful to make more sophisticated plots.}

\item{...}{other arguments passed on to \code{plot()}}
}
\value{
Only if \code{return_matrix} set to \code{TRUE}: the matrix passed to fanplot::fan
}
\description{
Plots a fanplot to display quantiles of (negative binomial approximations) of the week-wise predictive distributions
}
\examples{
data("salmonella.agona")
# convert old "disProg" to new "sts" data class:
salmonella <- disProg2sts(salmonella.agona)
control_salmonella <- list(end = list(f = addSeason2formula(~ 1), lag = 1),
                           ar = list(f = addSeason2formula(~ 1), lag = 1),
                           family = "NegBinM", subset = 6:250)
fit_salmonella <- hhh4_lag(salmonella, control_salmonella) # fit model
# obtain prediction:
pred_mom <- predictive_moments(fit_salmonella, t_condition = 250, lgt = 52)
# plot the prediction only:
fanplot_prediction(pred_mom, add_legend = TRUE)
# or plot it along with the fit:
plot(fit_salmonella)
fanplot_prediction(pred_mom, add = TRUE) # add fan plot

}
